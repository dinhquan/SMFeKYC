// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
// swift-module-flags: -target x86_64-apple-ios10.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name SMFeKYC
import Dispatch
import FaceTecSDK
import Foundation
import MobileCoreServices
@_exported import SMFeKYC
import Swift
import SystemConfiguration
import UIKit
public class SMFeKYC {
  public struct Result {
    public let refTxnID: Swift.String?
    public let faceImage: UIKit.UIImage?
  }
  public enum Error : Swift.String {
    case livenessFailed
    case transactionFailed
    case initFailed
    public typealias RawValue = Swift.String
    public init?(rawValue: Swift.String)
    public var rawValue: Swift.String {
      get
    }
  }
  public enum Language : Swift.String {
    case english
    case vietnamese
    public typealias RawValue = Swift.String
    public init?(rawValue: Swift.String)
    public var rawValue: Swift.String {
      get
    }
  }
  public init(endpoint: Swift.String, authorizationToken: Swift.String, customizedRefID: Swift.String? = nil, language: SMFeKYC.SMFeKYC.Language = .vietnamese)
  public func startLiveness(from viewController: UIKit.UIViewController, success: @escaping (SMFeKYC.SMFeKYC.Result) -> Swift.Void, failure: @escaping (SMFeKYC.SMFeKYC.Error) -> Swift.Void)
  @objc deinit
}
extension SMFeKYC.SMFeKYC.Error : Swift.Equatable {}
extension SMFeKYC.SMFeKYC.Error : Swift.Hashable {}
extension SMFeKYC.SMFeKYC.Error : Swift.RawRepresentable {}
extension SMFeKYC.SMFeKYC.Language : Swift.Equatable {}
extension SMFeKYC.SMFeKYC.Language : Swift.Hashable {}
extension SMFeKYC.SMFeKYC.Language : Swift.RawRepresentable {}
